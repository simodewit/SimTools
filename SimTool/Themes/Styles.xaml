<!--
    Global style sheet for SimTools.
    - Merges Colors.xaml to reuse the dark theme brushes.
    - Sets defaults for common controls (Window, TextBlock, Button, TextBox, ComboBox, ListBox, Tabs, ScrollBar).
    - Provides reusable styles: Card, ToolbarTextButton, ToolbarRectButton, GhostButton, PrimaryButton, NavTextButton.
    - Keeps the look consistent: neutral dark surfaces, subtle borders, and an emerald accent for focus/primary actions.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Pull in brushes from Colors.xaml -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Themes/Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Global text -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Auto"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
    </Style>

    <!-- Windows default font/colors -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource Brush.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!-- Card container -->
    <Style x:Key="Card" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource Brush.Surface}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="8" ShadowDepth="0" Opacity="0.22" Color="#05000000"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Base button -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Brush.SurfaceAlt}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10,8"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Root"
                            Background="{TemplateBinding Background}"
                            CornerRadius="6"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                          RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="#1E2227"/>
                            <Setter Property="BorderBrush" Value="#343A42"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="#22272D"/>
                            <Setter Property="BorderBrush" Value="#3E454E"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Brush.Accent}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Text-only toolbar button (for "Add / Remove / Save") -->
    <Style x:Key="ToolbarTextButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="6,4"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.TextDim}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Root" Background="{TemplateBinding Background}">
                        <TextBlock Text="{TemplateBinding Content}" FontWeight="SemiBold"
                                   Foreground="{TemplateBinding Foreground}" Margin="6,2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.85"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Rectangular, low-profile button (kept for reuse elsewhere) -->
    <Style x:Key="ToolbarRectButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Padding" Value="6,4"/>
        <Setter Property="Background" Value="{DynamicResource Brush.SurfaceAlt}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Root"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="#1A1E23"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="#20252B"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Outlined/ghost button (now same thickness as Primary) -->
    <Style x:Key="GhostButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!-- Match vertical thickness to Primary -->
        <Setter Property="Padding" Value="10,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Root"
                            Background="{TemplateBinding Background}"
                            CornerRadius="6"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="#14171B"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="#191D22"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Accent primary button -->
    <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource Brush.Accent}"/>
        <Setter Property="Foreground" Value="#0E141A"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Accent}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Root"
                            Background="{TemplateBinding Background}"
                            CornerRadius="6"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="{DynamicResource Brush.AccentAlt}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Root" Property="Background" Value="#3DB67F"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Left nav text-only button (SideNav) -->
    <Style x:Key="NavTextButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.TextDim}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="Sel" Width="3" HorizontalAlignment="Left" Visibility="Collapsed"
                                CornerRadius="2" Background="{DynamicResource Brush.Accent}"/>
                        <Border x:Name="Bg" Background="{TemplateBinding Background}" CornerRadius="6">
                            <ContentPresenter Margin="12,2,8,2" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bg" Property="Background" Value="#14000000"/>
                            <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bg" Property="Background" Value="#1E000000"/>
                            <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Inputs -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource Brush.SurfaceAlt}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="CaretBrush" Value="{DynamicResource Brush.Text}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource Brush.Accent}"/>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource Brush.SurfaceAlt}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="Margin" Value="4"/>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="Background" Value="{DynamicResource Brush.Surface}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="4"/>
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="Padding" Value="8"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="bd" Background="Transparent" CornerRadius="6">
                        <ContentPresenter Margin="6"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="#222428"/>
                            <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="#1A1C20"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dark tabs -->
    <Style TargetType="TabControl">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Grid.Row="0" Margin="0,0,0,6"
                                  Background="Transparent" IsItemsHost="True"/>
                        <Border Grid.Row="1" Background="{DynamicResource Brush.SurfaceAlt}"
                                BorderBrush="{DynamicResource Brush.Border}"
                                BorderThickness="0" CornerRadius="8">
                            <ContentPresenter x:Name="PART_SelectedContentHost" Margin="8"
                                              ContentSource="SelectedContent"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="Foreground" Value="{DynamicResource Brush.TextDim}"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="Bd" Background="Transparent" CornerRadius="6"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="Transparent" BorderThickness="1">
                        <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#1AFFFFFF"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#10000000"/>
                            <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Custom scroll bar -->
    <Style TargetType="ScrollBar">
        <Setter Property="Width" Value="6"/>
        <Setter Property="Background" Value="#474747"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Background="{TemplateBinding Background}">
                        <Track x:Name="PART_Track" 
                        IsDirectionReversed="true"
                        Focusable="false">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.LineUpCommand"
                              Style="{x:Null}" 
                              Background="#474747"
                              Height="20"
                              BorderThickness="0"/>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Background="Gray">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Border Background="{TemplateBinding Background}"
                                                    CornerRadius="4"
                                                    BorderThickness="0"
                                                    SnapsToDevicePixels="True"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>

                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.LineDownCommand"
                              Style="{x:Null}"
                              Background="#474747"
                              Height="0"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

