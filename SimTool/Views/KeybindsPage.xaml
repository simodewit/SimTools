<UserControl x:Class="SimTools.Views.KeybindsPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:models="clr-namespace:SimTools.Models">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Themes/Colors.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Themes/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- Text-only toolbar button (fallback) -->
            <Style x:Key="ToolbarTextButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="6,4"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.TextDim}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <TextBlock Text="{TemplateBinding Content}" FontWeight="SemiBold"
                                           Foreground="{TemplateBinding Foreground}" Margin="6,2"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value="0.85"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.55"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Accent link-like button (for Clear) -->
            <Style x:Key="LinkAccentButton" TargetType="Button" BasedOn="{StaticResource ToolbarTextButton}">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Accent}"/>
                <Setter Property="Padding" Value="4,2"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <TextBlock x:Name="Lbl"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontWeight="SemiBold"
                                       Margin="4,2"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Lbl" Property="TextBlock.TextDecorations" Value="Underline"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value="0.85"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.55"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Assign button: visible, stretches full width -->
            <Style x:Key="AssignButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Background" Value="{DynamicResource Brush.SurfaceAlt}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Root"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="4"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Root" Property="Background" Value="#1A1E23"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Root" Property="Background" Value="#20252B"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.55"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Selection style: only left accent bar, no filled background -->
            <Style x:Key="SlimListBoxItem" TargetType="ListBoxItem">
                <Setter Property="Padding" Value="4"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Grid>
                                <Border x:Name="Sel" Width="3" HorizontalAlignment="Left" Visibility="Collapsed"
                                        CornerRadius="2" Background="{DynamicResource Brush.Accent}"/>
                                <Border x:Name="Bg" Background="Transparent" CornerRadius="6">
                                    <ContentPresenter Margin="10,4,8,4"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Sel" Property="Visibility" Value="Visible"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bg" Property="Background" Value="#14000000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Text="Keybind Profiles &amp; Maps" FontWeight="Bold" FontSize="18" Margin="0,0,0,8"/>

        <!-- Three bars -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>

            <!-- Profiles -->
            <Border Style="{DynamicResource Card}" Margin="0,0,8,0">
                <DockPanel LastChildFill="True">
                    <Grid DockPanel.Dock="Top" Margin="0,0,0,8">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Profiles" FontWeight="Bold" VerticalAlignment="Center"/>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Style="{StaticResource ToolbarTextButton}" FontFamily="Segoe MDL2 Assets" FontSize="14" Content="&#xE710;" ToolTip="Add profile"    AutomationProperties.Name="Add profile"    Command="{Binding AddProfile}" />
                            <Button Style="{StaticResource ToolbarTextButton}" FontFamily="Segoe MDL2 Assets" FontSize="14" Content="&#xE74D;" ToolTip="Remove profile" AutomationProperties.Name="Remove profile" Command="{Binding RemoveProfile}" />
                            <Button Style="{StaticResource ToolbarTextButton}" FontFamily="Segoe MDL2 Assets" FontSize="14" Content="&#xE70F;" ToolTip="Rename profile" AutomationProperties.Name="Rename profile" Click="RenameProfile_Click" />
                            <!-- NEW -->
                            <Button Style="{StaticResource ToolbarTextButton}" FontFamily="Segoe MDL2 Assets" FontSize="14" Content="&#xE8C8;" ToolTip="Duplicate profile" AutomationProperties.Name="Duplicate profile" Command="{Binding DuplicateProfile}" />
                        </StackPanel>
                    </Grid>

                    <ListBox x:Name="ProfilesList"
                             ItemsSource="{Binding Profiles}"
                             SelectedItem="{Binding SelectedProfile}"
                             Background="Transparent" BorderThickness="0"
                             ItemContainerStyle="{StaticResource SlimListBoxItem}"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                             ScrollViewer.CanContentScroll="False">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <!-- NEW: inline editor -->
                                <Grid>
                                    <TextBlock x:Name="ProfileNameText"
                                               Text="{Binding Name}"
                                               VerticalAlignment="Center"/>
                                    <TextBox x:Name="ProfileNameEditor"
                                             Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                                             Visibility="Collapsed"
                                             MinWidth="80"
                                             Height="28"
                                             Padding="6,0"
                                             VerticalContentAlignment="Center"
                                             KeyDown="ProfileNameEditor_KeyDown"
                                             LostKeyboardFocus="ProfileNameEditor_LostFocus"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </Border>

            <!-- Maps -->
            <Border Grid.Column="1" Style="{DynamicResource Card}" Margin="4,0,4,0">
                <DockPanel LastChildFill="True">
                    <Grid DockPanel.Dock="Top" Margin="0,0,0,8">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Maps" FontWeight="Bold" VerticalAlignment="Center"/>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Style="{StaticResource ToolbarTextButton}" FontFamily="Segoe MDL2 Assets" FontSize="14" Content="&#xE710;" ToolTip="Add map"    AutomationProperties.Name="Add map"    Command="{Binding AddMap}" />
                            <Button Style="{StaticResource ToolbarTextButton}" FontFamily="Segoe MDL2 Assets" FontSize="14" Content="&#xE74D;" ToolTip="Remove map" AutomationProperties.Name="Remove map" Command="{Binding RemoveMap}" />
                            <Button Style="{StaticResource ToolbarTextButton}" FontFamily="Segoe MDL2 Assets" FontSize="14" Content="&#xE70F;" ToolTip="Rename map" AutomationProperties.Name="Rename map" Click="RenameMap_Click" />
                            <!-- NEW -->
                            <Button Style="{StaticResource ToolbarTextButton}" FontFamily="Segoe MDL2 Assets" FontSize="14" Content="&#xE8C8;" ToolTip="Duplicate map" AutomationProperties.Name="Duplicate map" Command="{Binding DuplicateMap}" />
                        </StackPanel>
                    </Grid>

                    <ListBox x:Name="MapsList"
                             ItemsSource="{Binding Maps}"
                             SelectedItem="{Binding SelectedMap}"
                             Background="Transparent" BorderThickness="0"
                             ItemContainerStyle="{StaticResource SlimListBoxItem}"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                             ScrollViewer.CanContentScroll="False">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <!-- NEW: inline editor -->
                                <Grid>
                                    <TextBlock x:Name="MapNameText"
                                               Text="{Binding Name}"
                                               VerticalAlignment="Center"/>
                                    <TextBox x:Name="MapNameEditor"
                                             Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                                             Visibility="Collapsed"
                                             MinWidth="80"
                                             Height="28"
                                             Padding="6,0"
                                             VerticalContentAlignment="Center"
                                             KeyDown="MapNameEditor_KeyDown"
                                             LostKeyboardFocus="MapNameEditor_LostFocus"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </Border>

            <!-- Keybinds -->
            <Border Grid.Column="2" Style="{DynamicResource Card}" Margin="8,0,0,0">
                <DockPanel LastChildFill="True">
                    <Grid DockPanel.Dock="Top" Margin="0,0,0,8">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Keybinds" FontWeight="Bold" VerticalAlignment="Center"/>
                        <StackPanel Grid.Column="3" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Style="{StaticResource ToolbarTextButton}"
                                    FontFamily="Segoe MDL2 Assets" FontSize="14"
                                    Content="&#xE710;"
                                    ToolTip="Add action"
                                    AutomationProperties.Name="Add action"
                                    Command="{Binding AddKeybind}" />
                        </StackPanel>
                    </Grid>

                    <!-- ListBox for keybind rows, with its own dark scrollbar -->
                    <ListBox x:Name="KeybindsList"
                            ItemsSource="{Binding Keybinds}"
                            Background="Transparent" BorderThickness="0"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            ScrollViewer.CanContentScroll="False"
                            VerticalAlignment="Stretch">
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type models:KeybindBinding}">
                                <Grid Margin="0,4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <!-- Action name -->
                                        <ColumnDefinition Width="*" />
                                        <!-- Assign input -->
                                        <ColumnDefinition Width="160" />
                                        <!-- Output -->
                                        <ColumnDefinition Width="Auto"/>
                                        <!-- Block -->
                                        <ColumnDefinition Width="Auto"/>
                                        <!-- Clear -->
                                        <ColumnDefinition Width="Auto"/>
                                        <!-- Remove -->
                                    </Grid.ColumnDefinitions>

                                    <!-- Action name -->
                                    <TextBox Grid.Column="0"
                                             Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                                             Padding="8,0"
                                             Height="32"
                                             VerticalContentAlignment="Center"
                                             VerticalAlignment="Center"
                                             KeyDown="KeybindName_KeyDown"/>

                                    <!-- Assign -->
                                    <Button x:Name="AssignBtn"
                                            Grid.Column="1"
                                            Style="{StaticResource AssignButton}"
                                            Click="AssignKey_Click"
                                            ToolTip="Click to assign a key or device control"
                                            HorizontalAlignment="Stretch">
                                        <TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis" />
                                    </Button>

                                    <!-- NEW: virtual output (what we emit) -->
                                    <ComboBox Grid.Column="2"
                                              ItemsSource="{Binding DataContext.AvailableOutputs, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                              SelectedItem="{Binding Output, Mode=TwoWay}"
                                              Height="32"
                                              MinWidth="140"
                                              VerticalAlignment="Center"/>

                                    <!-- NEW: whether to block the real key -->
                                    <CheckBox Grid.Column="3"
                                              Margin="8,0,0,0"
                                              IsChecked="{Binding BlockOriginal}"
                                              VerticalAlignment="Center"
                                              Content="Block"
                                              ToolTip="Swallow the physical key globally"/>

                                    <!-- Clear (E894) -->
                                    <Button Grid.Column="4"
                                            Style="{StaticResource LinkAccentButton}"
                                            FontFamily="Segoe MDL2 Assets" FontSize="14"
                                            Content="&#xE894;"
                                            Margin="8,0,0,0"
                                            Click="ClearKey_Click"
                                            ToolTip="Clear this binding"
                                            AutomationProperties.Name="Clear binding"
                                            VerticalAlignment="Center"/>

                                    <Button Grid.Column="5"
                                            Style="{StaticResource ToolbarTextButton}"
                                            FontFamily="Segoe MDL2 Assets" FontSize="14"
                                            Content="&#xE74D;"
                                            Margin="8,0,0,0"
                                            Click="RemoveKeybind_Click"
                                            ToolTip="Remove this action"
                                            AutomationProperties.Name="Remove binding"
                                            VerticalAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </Border>
        </Grid>

        <!-- General settings -->
        <Border Grid.Row="2" Style="{DynamicResource Card}" Margin="0,12,0,0">
            <StackPanel>
                <TextBlock Text="General Settings" FontWeight="Bold" Margin="0,0,0,6"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <!-- Next Map -->
                    <StackPanel Grid.Column="0" Margin="0,0,10,0">
                        <TextBlock Text="Hotkey: Next Map"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <!-- picker -->
                                <ColumnDefinition Width="Auto"/>
                                <!-- clear -->
                            </Grid.ColumnDefinitions>

                            <Button x:Name="NextMapBtn"
                                    Grid.Column="0"
                                    Style="{StaticResource AssignButton}"
                                    Click="NextMapAssign_Click"
                                    HorizontalAlignment="Stretch">
                                <TextBlock Text="{Binding NextMapHotkey}" TextTrimming="CharacterEllipsis"/>
                            </Button>

                            <!-- Clear (E894) -->
                            <Button Grid.Column="1"
                                    Style="{StaticResource LinkAccentButton}"
                                    FontFamily="Segoe MDL2 Assets" FontSize="12"
                                    Content="&#xE894;"
                                    ToolTip="Clear Next Map hotkey"
                                    Click="NextMapClear_Click"/>
                        </Grid>
                    </StackPanel>

                    <!-- Previous Map -->
                    <StackPanel Grid.Column="1" Margin="10,0,0,0">
                        <TextBlock Text="Hotkey: Previous Map"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Button x:Name="PrevMapBtn"
                                    Grid.Column="0"
                                    Style="{StaticResource AssignButton}"
                                    Click="PrevMapAssign_Click"
                                    HorizontalAlignment="Stretch">
                                <TextBlock Text="{Binding PrevMapHotkey}" TextTrimming="CharacterEllipsis"/>
                            </Button>

                            <!-- Clear (E894) -->
                            <Button Grid.Column="1"
                                    Style="{StaticResource LinkAccentButton}"
                                    FontFamily="Segoe MDL2 Assets" FontSize="12"
                                    Content="&#xE894;"
                                    ToolTip="Clear Previous Map hotkey"
                                    Click="PrevMapClear_Click"/>
                        </Grid>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
