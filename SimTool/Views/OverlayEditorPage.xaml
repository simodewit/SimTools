<UserControl x:Class="SimTools.Views.OverlayEditorPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SimTools.Controls"
             xmlns:conv="clr-namespace:SimTools.Converters">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Themes/Colors.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Themes/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
            <!-- Local light-weight button style (fallback if the app doesn't define it) -->
            <Style x:Key="SecondaryButton" TargetType="Button">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
                <Setter Property="Background" Value="{DynamicResource Brush.Surface}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Opacity" Value="0.9"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="1"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Compare two values (item vs SelectedTool) -->
            <conv:MultiEqualityConverter x:Key="MultiEqualityConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="20" x:Name="Root">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Header + Tool Buttons -->
            <RowDefinition Height="*" />
            <!-- Preview Surface -->
            <RowDefinition Height="Auto"/>
            <!-- Small Settings -->
        </Grid.RowDefinitions>

        <!-- HEADER -->
        <StackPanel Grid.Row="0" Margin="0,0,0,10">
            <TextBlock Text="Overlay Editor" FontSize="20" FontWeight="Bold"
                       Foreground="{DynamicResource Brush.Text}"/>
            <TextBlock Text="Pick a tool, click elements to edit them. Inspector stays open until you close it."
                       Foreground="{DynamicResource Brush.TextDim}" Margin="0,4,0,0"/>
        </StackPanel>

        <!-- TOOL BUTTONS (row above preview) -->
        <ScrollViewer Grid.Row="0" Margin="0,48,0,8"
                      HorizontalScrollBarVisibility="Auto"
                      VerticalScrollBarVisibility="Disabled">
            <ItemsControl x:Name="ToolButtons" ItemsSource="{Binding Tools}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Content="{Binding Name}"
                                Margin="0,0,8,0"
                                Padding="10,6"
                                Click="ToolButton_Click"
                                Tag="{Binding}">
                            <!-- Only one Style set: keep nested style and base it on SecondaryButton -->
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource SecondaryButton}">
                                    <Style.Triggers>
                                        <!-- Highlight when this item == SelectedTool -->
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource MultiEqualityConverter}">
                                                    <!-- current item -->
                                                    <Binding/>
                                                    <!-- editor SelectedTool -->
                                                    <Binding Path="DataContext.SelectedTool"
                                                             RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                            <Setter Property="Opacity" Value="1"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <!-- PREVIEW SURFACE -->
        <Border Grid.Row="1"
                x:Name="PreviewBackdrop"
                CornerRadius="10"
                Background="{DynamicResource Brush.SurfaceAlt}"
                BorderBrush="{DynamicResource Brush.Border}"
                BorderThickness="1">
            <Grid x:Name="PreviewSurface"
                  Background="#00000000"
                  MouseLeftButtonDown="PreviewSurface_MouseLeftButtonDown">

                <!-- Clickable overlay background -->
                <Border x:Name="OverlayBackgroundHitTarget"
                        Background="{DynamicResource Overlay.PanelBrush}"
                        Opacity="1.0"
                        CornerRadius="10"
                        Margin="32"
                        IsHitTestVisible="True"
                        MouseLeftButtonDown="OverlayBackgroundHitTarget_MouseLeftButtonDown"/>

                <!-- Tool host -->
                <Viewbox Stretch="Uniform" StretchDirection="DownOnly"
                         Margin="32" IsHitTestVisible="False">
                    <Border Background="#00000000">
                        <ContentPresenter x:Name="ToolHost"/>
                    </Border>
                </Viewbox>

                <!-- Inspector popup (stays open; close with the 'x' button) -->
                <Popup x:Name="InspectorPopup"
                       Placement="Mouse"
                       StaysOpen="True"
                       AllowsTransparency="True"
                       PopupAnimation="Fade">
                    <Border Background="{DynamicResource Brush.Surface}"
                            BorderBrush="{DynamicResource Brush.Border}"
                            BorderThickness="1"
                            CornerRadius="10"
                            Padding="8"
                            SnapsToDevicePixels="True">
                        <DockPanel LastChildFill="True">
                            <Button Content="✕"
                                    DockPanel.Dock="Top"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Padding="6,2"
                                    Margin="0,0,0,6"
                                    Click="CloseInspector_Click"
                                    Style="{StaticResource SecondaryButton}"/>
                            <local:InspectorPanel x:Name="Inspector"/>
                        </DockPanel>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <!-- SMALL SETTINGS (bottom) -->
        <Border Grid.Row="2" Style="{DynamicResource Card}" Margin="0,12,0,0" Padding="12">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock Text="Preview background:" VerticalAlignment="Center"
                           Foreground="{DynamicResource Brush.Text}" Margin="0,0,8,0"/>
                <ComboBox x:Name="BackgroundSelector"
                          Width="180"
                          SelectionChanged="BackgroundSelector_SelectionChanged">
                    <ComboBoxItem Content="Asphalt (default)" IsSelected="True"/>
                    <ComboBoxItem Content="Solid gray"/>
                    <ComboBoxItem Content="Solid dark"/>
                    <ComboBoxItem Content="Choose image…"/>
                </ComboBox>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
