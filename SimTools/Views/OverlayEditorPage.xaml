<UserControl x:Class="SimTools.Views.OverlayEditorPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SimTools.Controls"
             xmlns:conv="clr-namespace:SimTools.Converters">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Themes/Colors.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Themes/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
            <conv:MultiEqualityConverter x:Key="MultiEqualityConverter"/>

            <!-- Fallback base button style (unchanged) -->
            <Style x:Key="SecondaryButton" TargetType="Button">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
                <Setter Property="Background" Value="{DynamicResource Brush.Surface}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Opacity" Value="0.9"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="1"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Chrome-like tab toggle button (unchanged) -->
            <Style x:Key="TabToggleButton" TargetType="ToggleButton">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
                <Setter Property="Background" Value="{DynamicResource Brush.Surface}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="Margin" Value="0,0,8,0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <Border x:Name="TabShape"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="12,12,0,0"
                                        Padding="{TemplateBinding Padding}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      RecognizesAccessKey="True"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="TabShape" Property="Background" Value="{DynamicResource Brush.SurfaceAlt}"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="TabShape" Property="Background" Value="{DynamicResource Brush.SurfaceAlt}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ▼▼▼ DROPDOWN STYLES PORTED FROM KEYBINDS PAGE ▼▼▼ -->
            <!-- ComboBoxItem (rows) -->
            <Style x:Key="ThemedComboBoxItem" TargetType="ComboBoxItem">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Grid>
                                <Border x:Name="Bd"
                                        Background="{TemplateBinding Background}"
                                        Padding="{TemplateBinding Padding}"/>
                                <ContentPresenter Margin="0,0,24,0" VerticalAlignment="Center"/>
                                <!-- checkmark shown when selected -->
                                <Path x:Name="Chk"
                                      Width="12" Height="12"
                                      HorizontalAlignment="Right" Margin="8,0,8,0" VerticalAlignment="Center"
                                      Data="M 0 6 L 4 10 L 12 2"
                                      Stroke="{DynamicResource Brush.Accent}"
                                      StrokeThickness="2"
                                      StrokeEndLineCap="Square"
                                      Visibility="Collapsed"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="Bd" Property="Background" Value="#14000000"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Bd" Property="Background" Value="#1F4CC38A"/>
                                    <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
                                    <Setter TargetName="Chk" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.55"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ComboBox (dark, arrow-hover only, full-pill click highlight) -->
            <Style x:Key="ComboBox.Themed" TargetType="ComboBox">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="MinWidth" Value="140"/>
                <Setter Property="Padding" Value="6,0"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
                <Setter Property="Background" Value="{DynamicResource Brush.SurfaceAlt}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <!-- apply the item container style we defined above -->
                <Setter Property="ItemContainerStyle" Value="{StaticResource ThemedComboBoxItem}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid SnapsToDevicePixels="True">

                                <!-- full-size toggle with inline template -->
                                <ToggleButton x:Name="Toggle"
                                              Focusable="False"
                                              OverridesDefaultStyle="True"
                                              IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border x:Name="Root"
                                                    CornerRadius="6"
                                                    Background="{Binding Background, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                    BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                    BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=ComboBox}}">
                                                <Grid>
                                                    <ContentPresenter Margin="8,0,36,0"
                                                                      VerticalAlignment="Center"
                                                                      HorizontalAlignment="Left"
                                                                      Content="{Binding SelectionBoxItem, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                                      ContentStringFormat="{Binding SelectionBoxItemStringFormat, RelativeSource={RelativeSource AncestorType=ComboBox}}"/>
                                                    <!-- arrow side -->
                                                    <Border x:Name="ArrowHost"
                                                            Width="32"
                                                            HorizontalAlignment="Right"
                                                            CornerRadius="6"
                                                            Background="Transparent">
                                                        <Grid>
                                                            <Rectangle HorizontalAlignment="Left" Width="1"
                                                                       Fill="{DynamicResource Brush.Border}" Opacity="0.7"/>
                                                            <Path x:Name="Arrow"
                                                                  HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center"
                                                                  Data="M 0 0 L 8 0 L 4 4 Z"
                                                                  Fill="{DynamicResource Brush.TextDim}"/>
                                                        </Grid>
                                                    </Border>
                                                </Grid>
                                            </Border>

                                            <!-- Triggers -->
                                            <ControlTemplate.Triggers>
                                                <!-- keyboard focus accent -->
                                                <Trigger Property="IsKeyboardFocused" Value="True">
                                                    <Setter TargetName="Root" Property="BorderBrush" Value="{DynamicResource Brush.Accent}"/>
                                                </Trigger>

                                                <!-- arrow-only hover -->
                                                <Trigger SourceName="ArrowHost" Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="ArrowHost" Property="Background" Value="#1F4CC38A"/>
                                                    <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Brush.Text}"/>
                                                </Trigger>

                                                <!-- FULL-PILL CLICK HIGHLIGHT -->
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter TargetName="Root" Property="Background" Value="#1F4CC38A"/>
                                                    <Setter TargetName="Root" Property="BorderBrush" Value="{DynamicResource Brush.Accent}"/>
                                                    <Setter TargetName="ArrowHost" Property="Background" Value="Transparent"/>
                                                    <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Brush.Text}"/>
                                                </Trigger>

                                                <!-- while open -->
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="Root" Property="Background" Value="#1F4CC38A"/>
                                                    <Setter TargetName="Root" Property="BorderBrush" Value="{DynamicResource Brush.Accent}"/>
                                                    <Setter TargetName="ArrowHost" Property="Background" Value="Transparent"/>
                                                    <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Brush.Text}"/>
                                                </Trigger>

                                                <!-- disabled -->
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0.55"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>

                                <!-- dropdown -->
                                <Popup x:Name="Popup"
                                       Placement="Bottom"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       PopupAnimation="Slide">
                                    <Border x:Name="DropDownBorder"
                                            Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                            Background="{DynamicResource Brush.Surface}"
                                            BorderBrush="{DynamicResource Brush.Border}"
                                            BorderThickness="1"
                                            CornerRadius="6"
                                            Padding="2"
                                            SnapsToDevicePixels="True">
                                        <ScrollViewer CanContentScroll="False"
                                                      HorizontalScrollBarVisibility="Disabled"
                                                      VerticalScrollBarVisibility="Auto">
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="36"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.55"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- ▲▲▲ END PORTED DROPDOWN STYLES ▲▲▲ -->

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="20" x:Name="Root">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- HEADER -->
        <StackPanel Grid.Row="0" Margin="0,0,0,10">
            <TextBlock Text="Overlay Editor" FontSize="20" FontWeight="Bold"
                       Foreground="{DynamicResource Brush.Text}"/>
            <TextBlock Text="Choose a tool, then click elements to edit them. Inspector stays until you close it."
                       Foreground="{DynamicResource Brush.TextDim}" Margin="0,4,0,0"/>
        </StackPanel>

        <!-- TOOL TABS -->
        <ScrollViewer Grid.Row="0" Margin="0,48,0,8"
                      HorizontalScrollBarVisibility="Auto"
                      VerticalScrollBarVisibility="Disabled">
            <ItemsControl x:Name="ToolTabs" ItemsSource="{Binding Tools}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ToggleButton Content="{Binding Name}"
                                      Tag="{Binding}"
                                      Click="ToolTab_Click"
                                      Style="{StaticResource TabToggleButton}">
                            <ToggleButton.IsChecked>
                                <MultiBinding Converter="{StaticResource MultiEqualityConverter}" Mode="OneWay">
                                    <Binding/>
                                    <Binding Path="DataContext.SelectedTool"
                                             RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                                </MultiBinding>
                            </ToggleButton.IsChecked>
                        </ToggleButton>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <!-- PREVIEW SURFACE -->
        <Border Grid.Row="1"
                x:Name="PreviewBackdrop"
                CornerRadius="10"
                Background="{DynamicResource Brush.SurfaceAlt}"
                BorderBrush="{DynamicResource Brush.Border}"
                BorderThickness="1">
            <Grid x:Name="PreviewSurface"
                  Background="#00000000"
                  MouseLeftButtonUp="PreviewSurface_MouseLeftButtonUp">

                <Viewbox Stretch="Uniform" StretchDirection="DownOnly" Margin="32">
                    <Border Background="#00000000">
                        <ContentPresenter x:Name="ToolHost"/>
                    </Border>
                </Viewbox>

                <!-- Inspector popup (unchanged) -->
                <Popup x:Name="InspectorPopup"
                       PlacementTarget="{Binding ElementName=PreviewSurface}"
                       Placement="RelativePoint"
                       StaysOpen="True"
                       AllowsTransparency="True"
                       PopupAnimation="Fade"
                       Opened="InspectorPopup_Opened"
                       Closed="InspectorPopup_Closed">
                    <Border Background="{DynamicResource Brush.Surface}"
                            BorderBrush="{DynamicResource Brush.Border}"
                            BorderThickness="1"
                            CornerRadius="10"
                            SnapsToDevicePixels="True">
                        <DockPanel LastChildFill="True">
                            <Grid DockPanel.Dock="Top"
                                  Background="{DynamicResource Brush.SurfaceAlt}"
                                  Height="28"
                                  MouseLeftButtonDown="InspectorHeader_MouseLeftButtonDown"
                                  MouseMove="InspectorHeader_MouseMove"
                                  MouseLeftButtonUp="InspectorHeader_MouseLeftButtonUp"
                                  LostMouseCapture="InspectorHeader_LostMouseCapture">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Inspector"
                                           Margin="8,0,0,0"
                                           VerticalAlignment="Center"
                                           Foreground="{DynamicResource Brush.TextDim}"/>
                                <Button Grid.Column="1"
                                        Content="✕"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Margin="0,0,4,0"
                                        Padding="8,2"
                                        Click="CloseInspector_Click"
                                        Style="{StaticResource SecondaryButton}"/>
                            </Grid>

                            <Border Padding="8">
                                <local:InspectorPanel x:Name="Inspector"/>
                            </Border>
                        </DockPanel>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <!-- SMALL SETTINGS (bottom) -->
        <Border Grid.Row="2" Style="{DynamicResource Card}" Margin="0,12,0,0" Padding="12">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock Text="Preview background:" VerticalAlignment="Center"
                           Foreground="{DynamicResource Brush.Text}" Margin="0,0,8,0"/>

                <!-- Uses the themed ComboBox style from KeybindsPage -->
                <ComboBox x:Name="BackgroundSelector"
                          Width="185"
                          Style="{StaticResource ComboBox.Themed}"
                          SelectionChanged="BackgroundSelector_SelectionChanged">
                    <ComboBoxItem Content="Asphalt (default)" IsSelected="True"/>
                    <ComboBoxItem Content="Solid gray"/>
                    <ComboBoxItem Content="Solid dark"/>
                    <ComboBoxItem Content="Choose image…"/>
                </ComboBox>

                <Separator Margin="12,0,12,0" Width="1" Background="{DynamicResource Brush.Border}"/>

                <Button Content="Open overlay"
                        Style="{StaticResource SecondaryButton}"
                        Click="OpenOverlay_Click"
                        Margin="0,0,0,0"/>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
